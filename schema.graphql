schema {
  query: Query
  mutation: Mutation
  subscription: GraphqlSubscription
}

input AcceptCustomerInvitationInput {
  token: String!
}

"""Autogenerated return type of AcceptCustomerInvitation"""
type AcceptCustomerInvitationPayload {
  errors: [UserError!]
  node: CustomerCollaborator
}

type AccessFilter implements Node {
  createdAt: Date!
  customer: Customer!
  domain: Url!
  id: ID!
  policy: AccessFilterPolicyEnum!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for AccessFilter."""
type AccessFilterConnection {
  count: Int!

  """A list of edges."""
  edges: [AccessFilterEdge]

  """A list of nodes."""
  nodes: [AccessFilter]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type AccessFilterEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: AccessFilter
}

enum AccessFilterPolicyEnum {
  WHITELIST
  BLACKLIST
}

type AccessToken implements Node {
  createdAt: Date!
  id: ID!
  token: String!
  updatedAt: Date!
  user: User!
  uuid: ID!
  whitelistedDomain: Url!
}

"""The connection type for AccessToken."""
type AccessTokenConnection {
  count: Int!

  """A list of edges."""
  edges: [AccessTokenEdge]

  """A list of nodes."""
  nodes: [AccessToken]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type AccessTokenEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: AccessToken
}

"""Autogenerated return type of AddAppCategory"""
type AddAppCategoryPayload {
  errors: [UserError!]
  node: App
}

"""Autogenerated return type of AddAppProduct"""
type AddAppProductPayload {
  errors: [UserError!]
  node: App
}

"""Autogenerated return type of AddProductCategory"""
type AddProductCategoryPayload {
  errors: [UserError!]
  node: Product
}

"""Autogenerated return type of AddProductTag"""
type AddProductTagPayload {
  errors: [UserError!]
  node: Product
}

type Annotation implements Node {
  buttonText: String
  buttonUrl: Url
  cameraLookAt: JSON!
  cameraPosition: JSON!
  content: String
  createdAt: Date!
  customCss: JSON
  customFontAsset: SharedAsset
  displayPosition: Int!
  id: ID!
  markerPosition: JSON!
  title: String!
  updatedAt: Date!
  uuid: ID!
  variant: Variant!
}

"""The connection type for Annotation."""
type AnnotationConnection {
  count: Int!

  """A list of edges."""
  edges: [AnnotationEdge]

  """A list of nodes."""
  nodes: [Annotation]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type AnnotationEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Annotation
}

type App implements Node {
  brandsFromLiveProducts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): BrandConnection!
  categories(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): CategoryConnection!
  categoriesFromLiveProducts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): CategoryConnection!
  createdAt: Date!
  customer: Customer!
  customersFromLiveProducts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CustomerConnection!
  id: ID!
  locale: String!
  name: String!
  products(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductConnection!
  updatedAt: Date!
  uuid: ID!
}

input AppCategoryInput {
  appId: ID!
  categoryId: ID!
}

"""The connection type for App."""
type AppConnection {
  count: Int!

  """A list of edges."""
  edges: [AppEdge]

  """A list of nodes."""
  nodes: [App]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type AppEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: App
}

input AppProductInput {
  appId: ID!
  productId: ID!
}

input AssignMaterialToGroupItemsInput {
  groupId: ID!
  materialId: ID!
}

"""Autogenerated return type of AssignMaterialToGroupItems"""
type AssignMaterialToGroupItemsPayload {
  errors: [UserError!]
  node: Group
}

input AuthenticateAppInput {
  key: String!
  secret: String!
}

"""Autogenerated return type of AuthenticateApp"""
type AuthenticateAppPayload {
  errors: [UserError!]
  token: String!
}

input AuthenticateUserInput {
  email: String!
  password: String!
}

"""Autogenerated return type of AuthenticateUser"""
type AuthenticateUserPayload {
  errors: [UserError!]
  user: User!
}

type Brand implements Node {
  createdAt: Date!
  customCss: JSON
  customFontAsset: SharedAsset
  customer: Customer!
  id: ID!
  logoAsset: SharedAsset
  main: Boolean!
  metadata: JSON
  name: String!
  updatedAt: Date!
  uuid: ID!
  website: String
}

"""The connection type for Brand."""
type BrandConnection {
  count: Int!

  """A list of edges."""
  edges: [BrandEdge]

  """A list of nodes."""
  nodes: [Brand]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type BrandEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Brand
}

type Camera implements Node {
  autoRotationSpeed: Float!
  createdAt: Date!
  dampingFactor: Float!
  displayPosition: Int!
  fieldOfView: Int!
  horizontalAngle: Int
  horizontalRange: JSON
  id: ID!
  model: Model!
  name: String!
  rotationSpeed: Float!
  status: CameraStatusEnum!
  updatedAt: Date!
  uuid: ID!
  verticalAngle: Int!
  verticalRange: JSON
  zoomFactor: Float!
  zoomRange: JSON!
  zoomSpeed: Float!
}

"""The connection type for Camera."""
type CameraConnection {
  count: Int!

  """A list of edges."""
  edges: [CameraEdge]

  """A list of nodes."""
  nodes: [Camera]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type CameraEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Camera
}

enum CameraStatusEnum {
  LIVE
  INVISIBLE
}

"""Autogenerated return type of CancelSubscription"""
type CancelSubscriptionPayload {
  errors: [UserError!]
}

type Category implements SkinableInterface & Node {
  categories(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CategoryConnection
  createdAt: Date!
  id: ID!
  name: String!
  parent: Category
  preview: Preview
  products(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductConnection
  skinableAttributes: [SkinableAttribute!]!
  skins(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    appId: ID
  ): SkinConnection!
  status: CategoryStatusEnum!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for Category."""
type CategoryConnection {
  count: Int!

  """A list of edges."""
  edges: [CategoryEdge]

  """A list of nodes."""
  nodes: [Category]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type CategoryEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Category
}

enum CategoryOrderByEnum {
  CREATED_AT
  NAME
}

enum CategoryStatusEnum {
  LIVE
  INVISIBLE
  OFFLINE
}

input ChangePasswordWithTokenInput {
  token: String!
  password: String!
}

"""Autogenerated return type of ChangePasswordWithToken"""
type ChangePasswordWithTokenPayload {
  errors: [UserError!]
  user: User!
}

input ChangePlanInput {
  subscriptionId: ID!
  planId: ID!
}

"""Autogenerated return type of ChangePlan"""
type ChangePlanPayload {
  errors: [UserError!]
}

type Collaborator implements Node {
  createdAt: Date!
  email: String!
  id: ID!
  name: String!
  updatedAt: Date!
  uuid: ID!
}

input ColourInput {
  red: Int!
  green: Int!
  blue: Int!
  alpha: Int
}

type Configuration implements SkinableInterface & Node {
  configurations(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ConfigurationConnection
  createdAt: Date!
  displayPosition: Int!
  id: ID!
  isOptional: Boolean!
  label: String
  metadata: JSON
  model: Model!
  name: String!
  originalVersion: Configuration
  parent: Configuration
  skinableAttributes: [SkinableAttribute!]!
  skins(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    appId: ID
  ): SkinConnection!
  swatchColour: JSON!
  updatedAt: Date!
  uuid: ID!
  variants(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): VariantConnection
}

"""The connection type for Configuration."""
type ConfigurationConnection {
  count: Int!

  """A list of edges."""
  edges: [ConfigurationEdge]

  """A list of nodes."""
  nodes: [Configuration]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type ConfigurationEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Configuration
}

input CoordinatesInput {
  x: Float!
  y: Float!
  z: Float!
}

input CoordinatesQuaternionInput {
  x: Float!
  y: Float!
  z: Float!
  w: Float!
}

input CoordinatesTwoDimensionsInput {
  x: Float!
  y: Float!
}

input CreateAccessFilterInput {
  customerId: ID!
  domain: Url!
  policy: AccessFilterPolicyEnum!
}

"""Autogenerated return type of CreateAccessFilter"""
type CreateAccessFilterPayload {
  errors: [UserError!]
  node: AccessFilter
}

input CreateAccessTokenInput {
  whitelistedDomain: Url!
}

"""Autogenerated return type of CreateAccessToken"""
type CreateAccessTokenPayload {
  errors: [UserError!]
  node: AccessToken
}

input CreateAnnotationInput {
  variantId: ID!
  displayPosition: Int
  title: String!
  content: String
  buttonText: String
  buttonUrl: Url
  markerPosition: CoordinatesInput!
  cameraPosition: CoordinatesInput!
  cameraLookAt: CoordinatesInput!
  customCss: String
  customFontAssetId: ID
}

"""Autogenerated return type of CreateAnnotation"""
type CreateAnnotationPayload {
  errors: [UserError!]
  node: Annotation
}

input CreateAppInput {
  customerId: ID!
  name: String!
  locale: String
}

"""Autogenerated return type of CreateApp"""
type CreateAppPayload {
  errors: [UserError!]
  node: App
}

input CreateBrandInput {
  customerId: ID!
  name: String!
  website: String
  main: Boolean
  logoAssetId: ID
  customCss: String
  customFontAssetId: ID
}

"""Autogenerated return type of CreateBrand"""
type CreateBrandPayload {
  errors: [UserError!]
  node: Brand
}

input CreateCameraInput {
  modelId: ID!
  displayPosition: Int
  name: String
  dampingFactor: Float
  fieldOfView: Int
  horizontalAngle: Int
  horizontalRange: RangeInput
  rotationSpeed: Float
  autoRotationSpeed: Float
  verticalAngle: Int
  verticalRange: RangeInput
  zoomFactor: Float
  zoomRange: RangeInput
  zoomSpeed: Float
}

"""Autogenerated return type of CreateCamera"""
type CreateCameraPayload {
  errors: [UserError!]
  node: Camera
}

input CreateCategoryInput {
  name: String!
  parentId: ID
}

"""Autogenerated return type of CreateCategory"""
type CreateCategoryPayload {
  errors: [UserError!]
  node: Category
}

input CreateConfigurationInput {
  modelId: ID!
  name: String!
  label: String
  optional: Boolean
  displayPosition: Int
  parentId: ID
  metadata: Hash
}

"""Autogenerated return type of CreateConfiguration"""
type CreateConfigurationPayload {
  errors: [UserError!]
  node: Configuration
}

input CreateCustomerCollaboratorInput {
  customerId: ID!
  userId: ID
  role: CustomerCollaboratorRoleEnum
  invitationEmail: String
}

"""Autogenerated return type of CreateCustomerCollaborator"""
type CreateCustomerCollaboratorPayload {
  errors: [UserError!]
  node: CustomerCollaborator
}

input CreateCustomerInput {
  name: String!
  billingEmail: String
  phone: String
  addressLine1: String
  addressLine2: String
  city: String
  country: String
  postalCode: String
  taxId: String
  taxIdType: TaxIdTypeEnum
  business: Boolean
  gaTag: String
  gaTagAt: Date
  testing: TestingEnum
}

"""Autogenerated return type of CreateCustomer"""
type CreateCustomerPayload {
  errors: [UserError!]
  node: Customer
}

input CreateDesignerInput {
  name: String!
}

"""Autogenerated return type of CreateDesigner"""
type CreateDesignerPayload {
  errors: [UserError!]
  node: Designer
}

input CreateFramesFromCsvInput {
  csvUrl: Url!
  notify: String!
  assetsBaseUrl: Url
}

"""Autogenerated return type of CreateFramesFromCsv"""
type CreateFramesFromCsvPayload {
  jid: ID
}

input CreateGroupInput {
  groupableId: ID!
  name: String!
  kind: GroupKindEnum!
  parentId: ID
  translation: CoordinatesInput
  rotation: CoordinatesQuaternionInput
  scale: CoordinatesInput
}

"""Autogenerated return type of CreateGroup"""
type CreateGroupPayload {
  errors: [UserError!]
  node: Group
}

input CreateLightInput {
  modelId: ID!
  name: String
  switchable: Boolean
  kind: LightKindEnum
  intensity: Float
  angle: Float
  penumbra: Float
  displayPosition: Int
  colour: ColourInput
  position: CoordinatesInput
  target: CoordinatesInput
  dimensions: DimensionsInput
}

"""Autogenerated return type of CreateLight"""
type CreateLightPayload {
  errors: [UserError!]
  node: Light
}

input CreateMaterialInput {
  modelId: ID!
  groupId: ID
  name: String!
  displayPosition: Int
  albedoTransparency: Boolean
  albedoColour: ColourInput
  emissiveColour: ColourInput
  tiling: CoordinatesTwoDimensionsInput
  tilingOffset: CoordinatesTwoDimensionsInput
  tilingRotation: Float
  metalness: Float
  roughness: Float
  occlusionTextureIntensity: Float
  emissiveTextureIntensity: Float
  normalTextureIntensity: Float
  shader: ShaderEnum
  albedoTextureId: ID
  emissiveTextureId: ID
  metalnessTextureId: ID
  normalTextureId: ID
  occlusionTextureId: ID
  roughnessTextureId: ID
  ormTextureId: ID
  tiledAlbedoTextureId: ID
  tiledEmissiveTextureId: ID
  tiledNormalTextureId: ID
  tiledOrmTextureId: ID
}

"""Autogenerated return type of CreateMaterial"""
type CreateMaterialPayload {
  errors: [UserError!]
  node: Material
}

input CreateMaterialReplacementInput {
  variantId: ID!
  sourceId: ID!
  replacementId: ID
}

"""Autogenerated return type of CreateMaterialReplacement"""
type CreateMaterialReplacementPayload {
  errors: [UserError!]
  node: MaterialReplacement
}

input CreateMeshAssignmentInput {
  variantId: ID!
  meshId: ID!
  materialId: ID!
  groupId: ID
  name: String
  translation: CoordinatesInput
  rotation: CoordinatesQuaternionInput
  scale: CoordinatesInput
}

"""Autogenerated return type of CreateMeshAssignment"""
type CreateMeshAssignmentPayload {
  errors: [UserError!]
  node: MeshAssignment
}

input CreateMeshInput {
  groupId: ID
  modelId: ID!
  sourceAssetId: ID
  name: String!
  displayPosition: Int
  ignoredInitially: Boolean
  unit: UnitEnum!
}

"""Autogenerated return type of CreateMesh"""
type CreateMeshPayload {
  errors: [UserError!]
  node: Mesh
}

input CreateMeshReplacementInput {
  variantId: ID!
  sourceId: ID!
  replacementId: ID
}

"""Autogenerated return type of CreateMeshReplacement"""
type CreateMeshReplacementPayload {
  errors: [UserError!]
  node: MeshReplacement
}

input CreatePreviewInput {
  previewableId: ID!
  assetId: ID!
  title: String
  displayPosition: Int
}

"""Autogenerated return type of CreatePreview"""
type CreatePreviewPayload {
  errors: [UserError!]
  node: Preview
}

input CreateProductFeatureInput {
  productId: ID!
  name: String!
  unit: ProductFeatureUnitEnum
  value: String!
}

"""Autogenerated return type of CreateProductFeature"""
type CreateProductFeaturePayload {
  errors: [UserError!]
  node: ProductFeature
}

input CreateProductInput {
  groupId: ID
  customerId: ID!
  designerId: ID
  brandId: ID
  name: String!
  subtitle: String
  description: String
  staffPick: Boolean
  hidden: Boolean
  shopifyIdentifier: String
}

input CreateProductLinkInput {
  productId: ID!
  kind: ProductLinkKindEnum!
  title: String
  url: Url!
}

"""Autogenerated return type of CreateProductLink"""
type CreateProductLinkPayload {
  errors: [UserError!]
  node: ProductLink
}

"""Autogenerated return type of CreateProduct"""
type CreateProductPayload {
  errors: [UserError!]
  node: Product
}

input CreateSharedAssetInput {
  fileUrl: Url!
  kind: SharedAssetKindEnum!
  quality: Float
}

"""Autogenerated return type of CreateSharedAsset"""
type CreateSharedAssetPayload {
  errors: [UserError!]
  jid: ID
}

input CreateSkinInput {
  appId: ID!
  skinableId: ID!
  attribute: String!
  value: String
}

"""Autogenerated return type of CreateSkin"""
type CreateSkinPayload {
  errors: [UserError!]
  node: Skin
}

input CreateTagInput {
  name: String!
}

"""Autogenerated return type of CreateTag"""
type CreateTagPayload {
  errors: [UserError!]
  node: Tag
}

input CreateTextureInput {
  modelId: ID!
  assetId: ID!
  quality: Int
  name: String
}

"""Autogenerated return type of CreateTexture"""
type CreateTexturePayload {
  errors: [UserError!]
  node: Texture
}

input CreateUserInput {
  firstname: String!
  lastname: String!
  email: String!
  password: String!
  survey: String
}

"""Autogenerated return type of CreateUser"""
type CreateUserPayload {
  errors: [UserError!]
  node: User
}

input CreateVariantInput {
  configurationId: ID!
  displayPosition: Int
  name: String!
  swatchColour: ColourInput
  vtoAssetId: ID
  shadowAssetId: ID
  shadowMeshId: ID
  shopifyIdentifier: String
  chainAnnotations: Boolean
  metadata: Hash
}

"""Autogenerated return type of CreateVariant"""
type CreateVariantPayload {
  errors: [UserError!]
  node: Variant
}

type Customer implements Node {
  activeSubscription: Subscription
  addressLine1: String
  addressLine2: String
  allLibraryGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): GroupConnection!
  allMaterials(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): MaterialConnection
  allProducts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
    orderBy: ProductOrderByEnum
    orderDirection: OrderDirectionEnum
  ): ProductConnection
  apps(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): AppConnection!
  availablePlans(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PlanConnection!
  billingEmail: String
  blacklistedDomains(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): AccessFilterConnection!
  brands(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): BrandConnection!
  business: Boolean!
  city: String
  country: String
  createdAt: Date!
  customerCollaborators(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CustomerCollaboratorConnection!
  customerQuotas(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CustomerQuotaConnection
  id: ID!
  libraryGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    parentId: ID
    searchQuery: String
  ): GroupConnection!
  materials(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    groupId: ID
    searchQuery: String
  ): MaterialConnection
  name: String!
  pendingCustomerCollaborators(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CustomerCollaboratorConnection!
  permissions(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PermissionConnection
  phone: String
  postalCode: String
  productGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    parentId: ID
    searchQuery: String
  ): GroupConnection!
  products(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    groupId: ID
    searchQuery: String
    orderBy: ProductOrderByEnum
    orderDirection: OrderDirectionEnum
  ): ProductConnection
  subscriptions(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): SubscriptionConnection!
  taxId: String
  taxIdType: TaxIdTypeEnum
  updatedAt: Date!
  uuid: ID!
  whitelistedDomains(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): AccessFilterConnection!
}

type CustomerCollaborator implements Node {
  collaborator: Collaborator
  createdAt: Date!
  customer: Customer!
  id: ID!
  invitationAcceptedAt: Date
  invitationEmail: String
  invitationSentAt: Date
  role: CustomerCollaboratorRoleEnum!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for CustomerCollaborator."""
type CustomerCollaboratorConnection {
  count: Int!

  """A list of edges."""
  edges: [CustomerCollaboratorEdge]

  """A list of nodes."""
  nodes: [CustomerCollaborator]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type CustomerCollaboratorEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: CustomerCollaborator
}

enum CustomerCollaboratorRoleEnum {
  ADMIN
  USER
}

"""The connection type for Customer."""
type CustomerConnection {
  count: Int!

  """A list of edges."""
  edges: [CustomerEdge]

  """A list of nodes."""
  nodes: [Customer]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type CustomerEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Customer
}

type CustomerQuota implements Node {
  createdAt: Date!
  credits: Int!
  customer: Customer!
  extraCredits: Int!
  id: ID!
  planCredits: Int!
  quota: Quota!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for CustomerQuota."""
type CustomerQuotaConnection {
  count: Int!

  """A list of edges."""
  edges: [CustomerQuotaEdge]

  """A list of nodes."""
  nodes: [CustomerQuota]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type CustomerQuotaEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: CustomerQuota
}

scalar Date

type Designer implements Node {
  createdAt: Date!
  id: ID!
  metadata: JSON
  name: String!
  products(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductConnection
  updatedAt: Date!
  uuid: ID!
}

input DimensionsInput {
  width: Int!
  height: Int!
}

"""Autogenerated return type of DuplicateAnnotation"""
type DuplicateAnnotationPayload {
  errors: [UserError!]
  node: Annotation
}

"""Autogenerated return type of DuplicateCamera"""
type DuplicateCameraPayload {
  errors: [UserError!]
  node: Camera
}

"""Autogenerated return type of DuplicateConfiguration"""
type DuplicateConfigurationPayload {
  errors: [UserError!]
  node: Configuration
}

"""Autogenerated return type of DuplicateGroup"""
type DuplicateGroupPayload {
  errors: [UserError!]
  node: Group
}

"""Autogenerated return type of DuplicateLight"""
type DuplicateLightPayload {
  errors: [UserError!]
  node: Light
}

input DuplicateMaterialInput {
  modelId: ID
  libraryOwnerId: ID
  name: String
}

"""Autogenerated return type of DuplicateMaterial"""
type DuplicateMaterialPayload {
  errors: [UserError!]
  node: Material
}

"""Autogenerated return type of DuplicateMeshAssignment"""
type DuplicateMeshAssignmentPayload {
  errors: [UserError!]
  node: MeshAssignment
}

"""Autogenerated return type of DuplicateProduct"""
type DuplicateProductPayload {
  errors: [UserError!]
  node: Product
}

"""Autogenerated return type of DuplicateVariant"""
type DuplicateVariantPayload {
  errors: [UserError!]
  node: Variant
}

type Export implements Node {
  asset: SharedAsset!
  createdAt: Date!
  id: ID!
  kind: ExportKindEnum!
  updatedAt: Date!
  uuid: ID!
}

enum ExportKindEnum {
  GLTF
  APP_GLTF
  CUSTOM_GLTF
  GLB
  GLB_GLTF
  USDZ
  USDZ_GLTF
  RENDERING
  RENDERING_GLTF
}

enum FileStyleEnum {
  ORIGINAL
  OPTIMISED_JPG
  OPTIMISED_128_JPG
  OPTIMISED_PNG
  OPTIMISED
}

input GenerateCachedUsdzInput {
  variantIds: [ID!]!
}

"""Autogenerated return type of GenerateCachedUsdz"""
type GenerateCachedUsdzPayload {
  jid: ID
  node: PublicSharedAsset
}

input GenerateGlbInput {
  variantIds: [ID!]!
  noShadowPlane: Boolean
  noTiledTextures: Boolean
  noDracoMeshes: Boolean
}

"""Autogenerated return type of GenerateGlb"""
type GenerateGlbPayload {
  errors: [UserError!]
  jid: ID
}

input GenerateGltfInput {
  variantIds: [ID!]!
  noShadowPlane: Boolean
  noTiledTextures: Boolean
  noDracoMeshes: Boolean
}

"""Autogenerated return type of GenerateGltf"""
type GenerateGltfPayload {
  errors: [UserError!]
  jid: ID
}

input GenerateS3PresignedUrlInput {
  contentTypes: [String!]
}

"""Autogenerated return type of GenerateS3PresignedUrl"""
type GenerateS3PresignedUrlPayload {
  errors: [UserError!]
  s3PresignedUrls(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): S3PresignedUrlConnection!
}

input GenerateUsdzInput {
  variantIds: [ID!]!
  converter: String
}

"""Autogenerated return type of GenerateUsdz"""
type GenerateUsdzPayload {
  errors: [UserError!]
  jid: ID
}

type GraphqlSubscription {
  jobUpdates(jid: ID!): JobUpdatesPayload
  nodeChanged(id: ID!): NodeChangedPayload
  publicJobUpdates(jid: ID!): PublicJobUpdatesPayload
}

type Group implements Node {
  createdAt: Date!
  groupable: GroupableUnion
  groups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): GroupConnection
  id: ID!
  items(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): GroupableInterfaceConnection
  kind: GroupKindEnum!
  name: String!
  parent: Group
  rotation: JSON!
  scale: JSON!
  toVariantJson: JSON!
  translation: JSON!
  updatedAt: Date!
  uuid: ID!
}

interface GroupableInterface {
  group: Group
}

"""The connection type for GroupableInterface."""
type GroupableInterfaceConnection {
  """A list of edges."""
  edges: [GroupableInterfaceEdge]

  """A list of nodes."""
  nodes: [GroupableInterface]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type GroupableInterfaceEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: GroupableInterface
}

union GroupableUnion = Customer | Model | Variant

"""The connection type for Group."""
type GroupConnection {
  count: Int!

  """A list of edges."""
  edges: [GroupEdge]

  """A list of nodes."""
  nodes: [Group]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type GroupEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Group
}

enum GroupKindEnum {
  PRODUCT
  MATERIAL
  MESH_ASSIGNMENT
  MESH
}

scalar Hash

input ImportModelFromFileInput {
  variantId: ID!
  fileUrl: Url!
  kind: SharedAssetKindEnum!
  unit: UnitEnum!
}

"""Autogenerated return type of ImportModelFromFile"""
type ImportModelFromFilePayload {
  errors: [UserError!]
  jid: ID
}

input InitializeCheckoutInput {
  customerId: ID!
  customerQuotaId: ID
  planId: ID
  quantity: Int
  callbackUrl: String
}

"""Autogenerated return type of InitializeCheckout"""
type InitializeCheckoutPayload {
  errors: [UserError!]
  redirect: String
}

enum JobLevelEnum {
  INFO
  ERROR
  WARNING
}

"""Autogenerated return type of JobUpdates"""
type JobUpdatesPayload {
  isCompleted: Boolean!
  jid: ID!
  level: JobLevelEnum!
  message: String
  node: Node
  nodes: [Node!]
  status: String!
}

scalar JSON

type Light implements Node {
  angle: Float
  colour: JSON!
  createdAt: Date!
  dimensions: JSON!
  displayPosition: Int!
  distance: Float
  id: ID!
  intensity: Float!
  isSwitchable: Boolean
  kind: LightKindEnum!
  model: Model!
  name: String
  originalVersion: Light
  penumbra: Float
  position: JSON!
  switchable: Boolean @deprecated(reason: "Use isSwitchable instead")
  target: JSON!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for Light."""
type LightConnection {
  count: Int!

  """A list of edges."""
  edges: [LightEdge]

  """A list of nodes."""
  nodes: [Light]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type LightEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Light
}

enum LightKindEnum {
  AMBIANT
  DIRECTIONAL
  SPOT
  RECT_AREA
  POINT
}

type Material implements GroupableInterface & Node {
  albedoColour: JSON!
  albedoTexture: Texture
  albedoTransparency: Boolean! @deprecated(reason: "Use hasAlbedoTransparency instead")
  areTilesReady: Boolean!
  createdAt: Date!
  displayPosition: Int!
  downloadSize: Int!
  emissiveColour: JSON!
  emissiveTexture: Texture
  emissiveTextureIntensity: Float
  group: Group
  hasAlbedoTransparency: Boolean!
  id: ID!
  isOrmReady: Boolean!
  isTiledMaterial: Boolean!
  isUsed: Boolean!
  libraryOwner: Customer
  meshAssignments(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MeshAssignmentConnection
  metalness: Float!
  metalnessTexture: Texture
  model: Model
  name: String!
  normalTexture: Texture
  normalTextureIntensity: Float!
  occlusionTexture: Texture
  occlusionTextureIntensity: Float!
  originalVersion: Material
  ormTexture: Texture
  preview: Preview
  replacementsAsReplacement(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MaterialReplacementConnection
  replacementsAsSource(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MaterialReplacementConnection
  roughness: Float!
  roughnessTexture: Texture
  shader: ShaderEnum!
  tiledAlbedoTexture: Texture
  tiledEmissiveTexture: Texture
  tiledNormalTexture: Texture
  tiledOrmTexture: Texture
  tiling: JSON!
  tilingOffset: JSON!

  """
  The of tiling rotation of material. Rotates the UVs by this many radians counter-clockwise around the origin
  """
  tilingRotation: Float!
  toVariantJson: JSON!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for Material."""
type MaterialConnection {
  count: Int!

  """A list of edges."""
  edges: [MaterialEdge]

  """A list of nodes."""
  nodes: [Material]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type MaterialEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Material
}

type MaterialReplacement implements Node {
  createdAt: Date!
  id: ID!
  replacement: Material
  source: Material!
  updatedAt: Date!
  uuid: ID!
  variant: Variant!
}

"""The connection type for MaterialReplacement."""
type MaterialReplacementConnection {
  count: Int!

  """A list of edges."""
  edges: [MaterialReplacementEdge]

  """A list of nodes."""
  nodes: [MaterialReplacement]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type MaterialReplacementEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: MaterialReplacement
}

type Mesh implements GroupableInterface & Node {
  coreGltfAsset: SharedAsset
  createdAt: Date!
  displayPosition: Int!
  downloadSize: Int!
  gltfAsset: SharedAsset
  group: Group
  id: ID!
  isIgnoredInitially: Boolean!
  isShadowPlane: Boolean!
  meshAssignments(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MeshAssignmentConnection
  metadata: JSON
  model: Model!
  name: String!
  optional: Boolean @deprecated(reason: "Delete this field once cache is solved")
  replacementsAsReplacement(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MeshReplacementConnection
  replacementsAsSource(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MeshReplacementConnection
  sourceAsset: SharedAsset!
  toVariantJson: JSON!
  unit: UnitEnum!
  updatedAt: Date!
  uuid: ID!
}

type MeshAssignment implements GroupableInterface & Node {
  createdAt: Date!
  downloadSize: Int!
  group: Group
  id: ID!
  material: Material!
  mesh: Mesh!
  name: String!
  rotation: JSON!
  scale: JSON!
  toVariantJson: JSON!
  translation: JSON!
  updatedAt: Date!
  uuid: ID!
  variant: Variant!
}

"""The connection type for MeshAssignment."""
type MeshAssignmentConnection {
  count: Int!

  """A list of edges."""
  edges: [MeshAssignmentEdge]

  """A list of nodes."""
  nodes: [MeshAssignment]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type MeshAssignmentEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: MeshAssignment
}

"""The connection type for Mesh."""
type MeshConnection {
  count: Int!

  """A list of edges."""
  edges: [MeshEdge]

  """A list of nodes."""
  nodes: [Mesh]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type MeshEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Mesh
}

type MeshReplacement implements Node {
  createdAt: Date!
  id: ID!
  replacement: Mesh
  source: Mesh!
  updatedAt: Date!
  uuid: ID!
  variant: Variant!
}

"""The connection type for MeshReplacement."""
type MeshReplacementConnection {
  count: Int!

  """A list of edges."""
  edges: [MeshReplacementEdge]

  """A list of nodes."""
  nodes: [MeshReplacement]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type MeshReplacementEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: MeshReplacement
}

type Model implements Node {
  allConfigurations(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ConfigurationConnection
  allMaterialGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): GroupConnection!
  allMaterials(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): MaterialConnection
  allMeshGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): GroupConnection!
  allMeshes(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): MaterialConnection
  cameras(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CameraConnection
  configurations(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    parentId: ID
  ): ConfigurationConnection
  createdAt: Date!
  downloadSize: Int!
  environmentMapAsset: SharedAsset
  environmentMapIntensity: Float
  id: ID!
  isConfigurable: Boolean!
  lights(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): LightConnection
  materialGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    parentId: ID
  ): GroupConnection!
  materials(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    groupId: ID
    searchQuery: String
  ): MaterialConnection
  meshGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    parentId: ID
  ): GroupConnection!
  meshes(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    groupId: ID
    searchQuery: String
  ): MeshConnection
  originalVersion: Model
  positioning: ModelPositioningEnum!
  product: Product!
  textures(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): TextureConnection
  updatedAt: Date!
  uuid: ID!
  variants(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): VariantConnection
}

enum ModelPositioningEnum {
  FLOOR
  WALL
  CEILING
  TABLE_TOP
  FACE
}

input ModelTextureInput {
  modelId: ID!
  textureId: ID!
}

type Mutation {
  acceptCustomerInvitation(input: AcceptCustomerInvitationInput!): AcceptCustomerInvitationPayload
  addAppCategory(input: AppCategoryInput!): AddAppCategoryPayload
  addAppProduct(input: AppProductInput!): AddAppProductPayload
  addProductCategory(input: ProductCategoryInput!): AddProductCategoryPayload
  addProductTag(input: ProductTagInput!): AddProductTagPayload
  assignMaterialToGroupItems(input: AssignMaterialToGroupItemsInput!): AssignMaterialToGroupItemsPayload
  authenticateApp(input: AuthenticateAppInput!): AuthenticateAppPayload
  authenticateUser(input: AuthenticateUserInput!): AuthenticateUserPayload
  cancelSubscription(id: ID!): CancelSubscriptionPayload
  changePasswordWithToken(input: ChangePasswordWithTokenInput!): ChangePasswordWithTokenPayload
  changePlan(input: ChangePlanInput!): ChangePlanPayload
  createAccessFilter(input: CreateAccessFilterInput!): CreateAccessFilterPayload
  createAccessToken(input: CreateAccessTokenInput!): CreateAccessTokenPayload
  createAnnotation(input: CreateAnnotationInput!): CreateAnnotationPayload
  createApp(input: CreateAppInput!): CreateAppPayload
  createBrand(input: CreateBrandInput!): CreateBrandPayload
  createCamera(input: CreateCameraInput!): CreateCameraPayload
  createCategory(input: CreateCategoryInput!): CreateCategoryPayload
  createConfiguration(input: CreateConfigurationInput!): CreateConfigurationPayload
  createCustomer(input: CreateCustomerInput!): CreateCustomerPayload
  createCustomerCollaborator(input: CreateCustomerCollaboratorInput!): CreateCustomerCollaboratorPayload
  createDesigner(input: CreateDesignerInput!): CreateDesignerPayload
  createFramesFromCsv(input: CreateFramesFromCsvInput!): CreateFramesFromCsvPayload
  createGroup(input: CreateGroupInput!): CreateGroupPayload
  createLight(input: CreateLightInput!): CreateLightPayload
  createMaterial(input: CreateMaterialInput!): CreateMaterialPayload
  createMaterialReplacement(input: CreateMaterialReplacementInput!): CreateMaterialReplacementPayload
  createMesh(input: CreateMeshInput!): CreateMeshPayload
  createMeshAssignment(input: CreateMeshAssignmentInput!): CreateMeshAssignmentPayload
  createMeshReplacement(input: CreateMeshReplacementInput!): CreateMeshReplacementPayload
  createPreview(input: CreatePreviewInput!): CreatePreviewPayload
  createProduct(input: CreateProductInput!): CreateProductPayload
  createProductFeature(input: CreateProductFeatureInput!): CreateProductFeaturePayload
  createProductLink(input: CreateProductLinkInput!): CreateProductLinkPayload
  createSharedAsset(input: CreateSharedAssetInput!): CreateSharedAssetPayload
  createSkin(input: CreateSkinInput!): CreateSkinPayload
  createTag(input: CreateTagInput!): CreateTagPayload
  createTexture(input: CreateTextureInput!): CreateTexturePayload
  createUser(input: CreateUserInput!): CreateUserPayload
  createVariant(input: CreateVariantInput!): CreateVariantPayload
  duplicateAnnotation(id: ID!): DuplicateAnnotationPayload
  duplicateCamera(id: ID!): DuplicateCameraPayload
  duplicateConfiguration(id: ID!): DuplicateConfigurationPayload
  duplicateGroup(id: ID!): DuplicateGroupPayload
  duplicateLight(id: ID!): DuplicateLightPayload
  duplicateMaterial(id: ID!, input: DuplicateMaterialInput): DuplicateMaterialPayload
  duplicateMeshAssignment(id: ID!): DuplicateMeshAssignmentPayload
  duplicateProduct(id: ID!): DuplicateProductPayload
  duplicateVariant(id: ID!): DuplicateVariantPayload
  generateCachedUsdz(input: GenerateCachedUsdzInput!): GenerateCachedUsdzPayload
  generateGlb(input: GenerateGlbInput!): GenerateGlbPayload
  generateGltf(input: GenerateGltfInput!): GenerateGltfPayload
  generateS3PresignedUrl(input: GenerateS3PresignedUrlInput): GenerateS3PresignedUrlPayload
  generateUsdz(input: GenerateUsdzInput!): GenerateUsdzPayload
  importModelFromFile(input: ImportModelFromFileInput!): ImportModelFromFilePayload
  initializeCheckout(input: InitializeCheckoutInput!): InitializeCheckoutPayload
  publishProduct(id: ID!): PublishProductPayload
  removeAccessFilter(id: ID!): RemoveAccessFilterPayload
  removeAccessToken(id: ID!): RemoveAccessTokenPayload
  removeAnnotation(id: ID!): RemoveAnnotationPayload
  removeAppCategory(input: AppCategoryInput!): RemoveAppCategoryPayload
  removeAppProduct(input: AppProductInput!): RemoveAppProductPayload
  removeBrand(id: ID!): RemoveBrandPayload
  removeCamera(id: ID!): RemoveCameraPayload
  removeConfiguration(id: ID!): RemoveConfigurationPayload
  removeCustomerCollaborator(id: ID!): RemoveCustomerCollaboratorPayload
  removeGroup(id: ID!): RemoveGroupPayload
  removeLight(id: ID!): RemoveLightPayload
  removeMaterial(id: ID!): RemoveMaterialPayload
  removeMaterialReplacement(id: ID!): RemoveMaterialReplacementPayload
  removeMesh(id: ID!): RemoveMeshPayload
  removeMeshAssignment(id: ID!): RemoveMeshAssignmentPayload
  removeMeshReplacement(id: ID!): RemoveMeshReplacementPayload
  removeModelTexture(input: ModelTextureInput!): RemoveModelTexturePayload
  removePreview(id: ID!): RemovePreviewPayload
  removeProduct(id: ID!): RemoveProductPayload
  removeProductCategory(input: ProductCategoryInput!): RemoveProductCategoryPayload
  removeProductFeature(id: ID!): RemoveProductFeaturePayload
  removeProductLink(id: ID!): RemoveProductLinkPayload
  removeProductTag(input: ProductTagInput!): RemoveProductTagPayload
  removeSkin(id: ID!): RemoveSkinPayload
  removeUnusedMaterialsAndTextures(input: RemoveUnusedMaterialsAndTexturesInput!): RemoveUnusedMaterialsAndTexturesPayload
  removeVariant(id: ID!): RemoveVariantPayload
  renderScene(input: RenderSceneInput!): RenderScenePayload
  replaceMesh(input: ReplaceMeshInput!): ReplaceMeshPayload
  replaceTexture(input: ReplaceTextureInput!): ReplaceTexturePayload
  sendEmail(input: SendEmailInput!): SendEmailPayload
  sendResetPasswordLink(input: SendResetPasswordLinkInput!): SendResetPasswordLinkPayload
  unpublishProduct(id: ID!): UnpublishProductPayload
  updateAccessFilter(id: ID!, input: UpdateAccessFilterInput!): UpdateAccessFilterPayload
  updateAnnotation(id: ID!, input: UpdateAnnotationInput!): UpdateAnnotationPayload
  updateBrand(id: ID!, input: UpdateBrandInput!): UpdateBrandPayload
  updateCamera(id: ID!, input: UpdateCameraInput!): UpdateCameraPayload
  updateConfiguration(id: ID!, input: UpdateConfigurationInput!): UpdateConfigurationPayload
  updateCustomer(id: ID!, input: UpdateCustomerInput!): UpdateCustomerPayload
  updateCustomerCollaborator(id: ID!, input: UpdateCustomerCollaboratorInput!): UpdateCustomerCollaboratorPayload
  updateGroup(id: ID!, input: UpdateGroupInput!): UpdateGroupPayload
  updateLight(id: ID!, input: UpdateLightInput!): UpdateLightPayload
  updateMaterial(id: ID!, input: UpdateMaterialInput!): UpdateMaterialPayload
  updateMaterialReplacement(id: ID!, input: UpdateMaterialReplacementInput!): UpdateMaterialReplacementPayload
  updateMesh(id: ID!, input: UpdateMeshInput!): UpdateMeshPayload
  updateMeshAssignment(id: ID!, input: UpdateMeshAssignmentInput!): UpdateMeshAssignmentPayload
  updateMeshReplacement(id: ID!, input: UpdateMeshReplacementInput!): UpdateMeshReplacementPayload
  updateModel(id: ID!, input: UpdateModelInput!): UpdateModelPayload
  updatePreview(id: ID!, input: UpdatePreviewInput!): UpdatePreviewPayload
  updateProduct(id: ID!, input: UpdateProductInput!): UpdateProductPayload
  updateProductFeature(id: ID!, input: UpdateProductFeatureInput!): UpdateProductFeaturePayload
  updateProductLink(id: ID!, input: UpdateProductLinkInput!): UpdateProductLinkPayload
  updateSharedAsset(id: ID!, input: UpdateSharedAssetInput!): UpdateSharedAssetPayload
  updateSkin(id: ID!, input: UpdateSkinInput!): UpdateSkinPayload
  updateTexture(id: ID!, input: UpdateTextureInput!): UpdateTexturePayload
  updateUser(id: ID!, input: UpdateUserInput!): UpdateUserPayload
  updateVariant(id: ID!, input: UpdateVariantInput!): UpdateVariantPayload
}

"""An object with an ID."""
interface Node {
  """ID of the object."""
  id: ID!
}

"""Autogenerated return type of NodeChanged"""
type NodeChangedPayload {
  node: Node!
}

enum OrderDirectionEnum {
  DESC
  ASC
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Permission implements Node {
  createdAt: Date!
  id: ID!
  label: String!
  name: String!
  updatedAt: Date!
  uuid: ID!
  visible: Boolean!
}

"""The connection type for Permission."""
type PermissionConnection {
  count: Int!

  """A list of edges."""
  edges: [PermissionEdge]

  """A list of nodes."""
  nodes: [Permission]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PermissionEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Permission
}

type Plan implements Node {
  amount: Int!
  createdAt: Date!
  currency: PlanCurrencyEnum!
  description: String!
  footnotes: String
  humanizedAmount: String!
  id: ID!
  interval: PlanIntervalEnum!
  name: String!
  permissions(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PermissionConnection
  planQuotas(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PlanQuotaConnection!
  tagLine: String
  testing: TestingEnum!
  trialPeriodDays: Int!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for Plan."""
type PlanConnection {
  count: Int!

  """A list of edges."""
  edges: [PlanEdge]

  """A list of nodes."""
  nodes: [Plan]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

enum PlanCurrencyEnum {
  EUR
  USD
}

"""An edge in a connection."""
type PlanEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Plan
}

enum PlanIntervalEnum {
  DAY
  WEEK
  MONTH
  YEAR
}

type PlanQuota implements Node {
  createdAt: Date!
  credits: Int!
  cumulative: Boolean!
  humanizedCredits: String!
  humanizedName: String!
  humanizedUnitPrice: String!
  id: ID!
  monthly: Boolean!
  plan: Plan!
  quota: Quota!
  unitPrice: Int!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PlanQuota."""
type PlanQuotaConnection {
  count: Int!

  """A list of edges."""
  edges: [PlanQuotaEdge]

  """A list of nodes."""
  nodes: [PlanQuota]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PlanQuotaEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PlanQuota
}

enum PlanSourceEnum {
  PLATFORM
  SHOPIFY_SHOP
}

type Preview implements Node {
  asset: SharedAsset!
  createdAt: Date!
  displayPosition: Int!
  id: ID!
  previewable: PreviewableUnion!
  status: PreviewStatusEnum!
  title: String
  updatedAt: Date!
  uuid: ID!
}

union PreviewableUnion = Product | Variant

"""The connection type for Preview."""
type PreviewConnection {
  count: Int!

  """A list of edges."""
  edges: [PreviewEdge]

  """A list of nodes."""
  nodes: [Preview]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PreviewEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Preview
}

enum PreviewStatusEnum {
  LIVE
  INVISIBLE
}

type Product implements SkinableInterface & GroupableInterface & Node {
  apps(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): AppConnection

  """
  All categories that are publicy listed to the user.This include live
  categories available to everyone - AND - invisible categories but used in
  another of customer's products.
  """
  availableCategories(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): CategoryConnection
  brand: Brand
  categories(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CategoryConnection
  createdAt: Date!
  customer: Customer
  description: String
  designer: Designer
  draftVersion: Product!
  embeddedAt: Date
  features(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductFeatureConnection
  firstPublishedVersion: Product
  group: Group
  id: ID!
  isConfigurable: Boolean!
  isDraftVersion: Boolean!
  isHidden: Boolean!
  isLatestLiveOrInvisiblePublishedVersion: Boolean!
  isLatestPublishedVersion: Boolean!
  isMasterTutorial: Boolean!
  isPublishedVersion: Boolean!
  isPublishing: Boolean!
  isStaffPick: Boolean!
  isTutorial: Boolean!
  latestLiveOrInvisiblePublishedVersion: Product
  latestPublishedVersion: Product
  latestPublishingVersion: Product
  liveOrInvisiblePublishedVersions(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductConnection!
  metadata: JSON
  model: Model
  name: String!
  originalVersion: Product
  previews(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PreviewConnection
  productUrl: Url
  publishedAt: Date
  publishedFirstTimeAt: Date
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductConnection!
  purchaseUrls(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductLinkConnection
  shopifyIdentifier: String
  skinableAttributes: [SkinableAttribute!]!
  skins(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    appId: ID
  ): SkinConnection!
  status: ProductStatusEnum!
  subtitle: String
  tags(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): TagConnection
  updatedAt: Date!
  uuid: ID!
}

input ProductCategoryInput {
  productId: ID!
  categoryId: ID!
}

"""The connection type for Product."""
type ProductConnection {
  count: Int!

  """A list of edges."""
  edges: [ProductEdge]

  """A list of nodes."""
  nodes: [Product]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type ProductEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Product
}

type ProductFeature implements Node {
  createdAt: Date!
  id: ID!
  name: String!
  product: Product!
  status: ProductFeatureStatusEnum!
  unit: ProductFeatureUnitEnum!
  updatedAt: Date!
  uuid: ID!
  value: String!
}

"""The connection type for ProductFeature."""
type ProductFeatureConnection {
  count: Int!

  """A list of edges."""
  edges: [ProductFeatureEdge]

  """A list of nodes."""
  nodes: [ProductFeature]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type ProductFeatureEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ProductFeature
}

enum ProductFeatureStatusEnum {
  LIVE
  INVISIBLE
}

enum ProductFeatureUnitEnum {
  MM
  G
  IN
  USER_DEFINED
}

type ProductLink implements Node {
  createdAt: Date!
  id: ID!
  kind: ProductLinkKindEnum!
  product: Product!
  status: ProductLinkStatusEnum!
  title: String
  updatedAt: Date!
  url: Url!
  uuid: ID!
}

"""The connection type for ProductLink."""
type ProductLinkConnection {
  count: Int!

  """A list of edges."""
  edges: [ProductLinkEdge]

  """A list of nodes."""
  nodes: [ProductLink]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type ProductLinkEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ProductLink
}

enum ProductLinkKindEnum {
  PRODUCT_URL
  PURCHASE_URL
}

enum ProductLinkStatusEnum {
  LIVE
  INVISIBLE
}

enum ProductOrderByEnum {
  CREATED_AT
  NAME
}

enum ProductStatusEnum {
  CREATED
  DEPRECATED_REVIEW
  LIVE
  INVISIBLE
  OFFLINE
  PUBLISHING
}

input ProductTagInput {
  productId: ID!
  tagId: ID!
}

type PublicAnnotation implements PublicNodeInterface & Node {
  buttonText: String
  buttonUrl: Url
  cameraLookAt: JSON!
  cameraPosition: JSON!
  content: String
  createdAt: Date!
  customCss: JSON
  customFontAsset: SharedAsset
  displayPosition: Int!
  id: ID!
  markerPosition: JSON!
  title: String!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicAnnotation."""
type PublicAnnotationConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicAnnotationEdge]

  """A list of nodes."""
  nodes: [PublicAnnotation]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicAnnotationEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicAnnotation
}

type PublicApp implements PublicNodeInterface & Node {
  brandsFromLiveProducts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): PublicBrandConnection!
  categories(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
    parentId: ID
    orderBy: CategoryOrderByEnum
    orderDirection: OrderDirectionEnum
  ): PublicCategoryConnection!
  createdAt: Date!
  customer: PublicCustomer!
  customersFromLiveProducts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicCustomerConnection!
  id: ID!
  liveProducts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    categoryId: ID
    brandId: ID
    searchQuery: String
    orderBy: ProductOrderByEnum
    orderDirection: OrderDirectionEnum
  ): PublicProductConnection!
  locale: String!
  name: String!
  updatedAt: Date!
  uuid: ID!
}

type PublicBrand implements PublicNodeInterface & Node {
  createdAt: Date!
  customCss: JSON
  customFontAsset: SharedAsset
  id: ID!
  logoAssetUrl: Url
  name: String!
  updatedAt: Date!
  uuid: ID!
  website: String
}

"""The connection type for PublicBrand."""
type PublicBrandConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicBrandEdge]

  """A list of nodes."""
  nodes: [PublicBrand]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicBrandEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicBrand
}

type PublicCamera implements Node {
  autoRotationSpeed: Float!
  createdAt: Date!
  dampingFactor: Float!
  fieldOfView: Int!
  horizontalAngle: Int
  horizontalRange: JSON
  id: ID!
  rotationSpeed: Float!
  updatedAt: Date!
  uuid: ID!
  verticalAngle: Int!
  verticalRange: JSON
  zoomFactor: Float!
  zoomRange: JSON!
  zoomSpeed: Float!
}

"""The connection type for PublicCamera."""
type PublicCameraConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicCameraEdge]

  """A list of nodes."""
  nodes: [PublicCamera]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicCameraEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicCamera
}

type PublicCategory implements PublicNodeInterface & Node {
  createdAt: Date!
  id: ID!
  name: String!
  parent: PublicCategory
  preview: Preview
  status: String!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicCategory."""
type PublicCategoryConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicCategoryEdge]

  """A list of nodes."""
  nodes: [PublicCategory]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicCategoryEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicCategory
}

type PublicConfiguration implements PublicNodeInterface & Node {
  createdAt: Date!
  displayPosition: Int!
  id: ID!
  isOptional: Boolean!
  label: String!
  liveConfigurations(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicConfigurationConnection
  liveVariants(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicVariantConnection
  metadata: JSON
  name: String!
  parent: PublicConfiguration
  swatchColour: JSON!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicConfiguration."""
type PublicConfigurationConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicConfigurationEdge]

  """A list of nodes."""
  nodes: [PublicConfiguration]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicConfigurationEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicConfiguration
}

type PublicCustomer implements PublicNodeInterface & Node {
  createdAt: Date!
  id: ID!
  name: String!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicCustomer."""
type PublicCustomerConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicCustomerEdge]

  """A list of nodes."""
  nodes: [PublicCustomer]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicCustomerEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicCustomer
}

type PublicFeature implements PublicNodeInterface & Node {
  createdAt: Date!
  id: ID!
  name: String!
  unit: ProductFeatureUnitEnum!
  updatedAt: Date!
  uuid: ID!
  value: String!
}

"""The connection type for PublicFeature."""
type PublicFeatureConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicFeatureEdge]

  """A list of nodes."""
  nodes: [PublicFeature]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicFeatureEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicFeature
}

"""Autogenerated return type of PublicJobUpdates"""
type PublicJobUpdatesPayload {
  isCompleted: Boolean!
  jid: ID!
  level: JobLevelEnum!
  message: String
  node: PublicNodeInterface
  nodes: [PublicNodeInterface!]
  status: String!
}

type PublicLight implements PublicNodeInterface & Node {
  angle: Float
  colour: JSON!
  createdAt: Date!
  dimensions: JSON!
  distance: Float
  id: ID!
  intensity: Float!
  isSwitchable: Boolean
  kind: LightKindEnum!
  penumbra: Float
  position: JSON!
  target: JSON!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicLight."""
type PublicLightConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicLightEdge]

  """A list of nodes."""
  nodes: [PublicLight]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicLightEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicLight
}

type PublicMaterial implements Node {
  createdAt: Date!
  id: ID!
  updatedAt: Date!
  uuid: ID!
}

type PublicMaterialReplacement implements Node {
  createdAt: Date!
  id: ID!
  replacement: PublicMaterial
  source: PublicMaterial!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicMaterialReplacement."""
type PublicMaterialReplacementConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicMaterialReplacementEdge]

  """A list of nodes."""
  nodes: [PublicMaterialReplacement]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicMaterialReplacementEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicMaterialReplacement
}

type PublicMesh implements Node {
  createdAt: Date!
  id: ID!
  updatedAt: Date!
  uuid: ID!
}

type PublicMeshReplacement implements Node {
  createdAt: Date!
  id: ID!
  replacement: PublicMesh
  source: PublicMesh!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicMeshReplacement."""
type PublicMeshReplacementConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicMeshReplacementEdge]

  """A list of nodes."""
  nodes: [PublicMeshReplacement]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicMeshReplacementEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicMeshReplacement
}

type PublicModel implements PublicNodeInterface & Node {
  cameras(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicCameraConnection!
  createdAt: Date!
  environmentMapAsset: SharedAsset
  environmentMapIntensity: Float
  id: ID!
  isConfigurable: Boolean!
  lights(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicLightConnection!
  liveConfigurations(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    uuids: [ID!]
  ): PublicConfigurationConnection
  positioning: ModelPositioningEnum!
  updatedAt: Date!
  uuid: ID!
}

interface PublicNodeInterface {
  id: ID!
}

type PublicPreview implements PublicNodeInterface & Node {
  asset: SharedAsset!
  createdAt: Date!
  displayPosition: Int!
  id: ID!
  title: String
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicPreview."""
type PublicPreviewConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicPreviewEdge]

  """A list of nodes."""
  nodes: [PublicPreview]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicPreviewEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicPreview
}

type PublicProduct implements PublicNodeInterface & Node {
  brand: PublicBrand!
  createdAt: Date!
  customer: PublicCustomer!
  description: String
  id: ID!
  invisibleVariants(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    uuids: [ID!]
  ): PublicVariantConnection
  isStaffPick: Boolean!
  liveCategories(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicCategoryConnection
  liveFeatures(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicFeatureConnection
  livePreviews(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicPreviewConnection
  livePurchaseUrls(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductLinkConnection
  liveTags(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicTagConnection
  liveVariants(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    uuids: [ID!]
  ): PublicVariantConnection
  model: PublicModel!
  name: String!
  shopifyIdentifier: String
  status: String!
  subtitle: String
  updatedAt: Date!
  uuid: ID!
  viewerSettings: ViewerSettings!
}

"""The connection type for PublicProduct."""
type PublicProductConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicProductEdge]

  """A list of nodes."""
  nodes: [PublicProduct]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicProductEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicProduct
}

type PublicSharedAsset implements PublicNodeInterface & Node {
  createdAt: Date!
  id: ID!
  styles: [PublicSharedAssetStyles!]
  updatedAt: Date!
  uuid: ID!
}

type PublicSharedAssetStyles implements PublicNodeInterface {
  id: ID!
  name: FileStyleEnum!
  url: Url!
}

type PublicTag implements PublicNodeInterface & Node {
  createdAt: Date!
  id: ID!
  name: String!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for PublicTag."""
type PublicTagConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicTagEdge]

  """A list of nodes."""
  nodes: [PublicTag]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicTagEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicTag
}

type PublicVariant implements PublicNodeInterface & Node {
  annotations(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicAnnotationConnection
  appGltfAssetUrl: Url!
  chainAnnotations: Boolean! @deprecated(reason: "Use isChainAnnotations instead")
  coreGltfAssetUrl: Url! @deprecated(reason: "Use appGltfAssetUrl instead")
  createdAt: Date!
  displayPosition: Int!
  glbAssetUrl: Url
  gltfAssetUrl: Url!
  id: ID!
  isChainAnnotations: Boolean!
  materialReplacements(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicMaterialReplacementConnection
  meshReplacements(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PublicMeshReplacementConnection
  metadata: JSON
  name: String!
  shadowAssetUrl: Url
  shadowMeshGltfUrl: Url
  shadowMeshUrl: Url
  shopifyIdentifier: String
  swatchColour: JSON
  updatedAt: Date!
  usdzAssetUrl: Url
  uuid: ID!
}

"""The connection type for PublicVariant."""
type PublicVariantConnection {
  count: Int!

  """A list of edges."""
  edges: [PublicVariantEdge]

  """A list of nodes."""
  nodes: [PublicVariant]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type PublicVariantEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: PublicVariant
}

"""Autogenerated return type of PublishProduct"""
type PublishProductPayload {
  errors: [UserError!]
  jid: ID
}

type Query {
  allMaterialsFromLibrary(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    id: ID!
  ): MaterialConnection
  allTags(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    searchQuery: String
  ): TagConnection!
  app: PublicApp
  exportUrl(ids: [ID!]!, kind: ExportKindEnum!): String
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  plans(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    source: PlanSourceEnum!
    testing: TestingEnum
  ): PlanConnection!
  publicNode(id: ID!): PublicNodeInterface
  publicProduct(uuid: ID, slug: String, setEmbbededFlag: Boolean! = false): PublicProduct
  say: String!
  shopifyShop: ShopifyShop
  viewer: Viewer
}

type Quota implements Node {
  createdAt: Date!
  id: ID!
  label: String!
  name: String!
  updatedAt: Date!
  uuid: ID!
  visible: Boolean!
}

input RangeInput {
  min: Float!
  max: Float!
}

"""Autogenerated return type of RemoveAccessFilter"""
type RemoveAccessFilterPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveAccessToken"""
type RemoveAccessTokenPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveAnnotation"""
type RemoveAnnotationPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveAppCategory"""
type RemoveAppCategoryPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveAppProduct"""
type RemoveAppProductPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveBrand"""
type RemoveBrandPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveCamera"""
type RemoveCameraPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveConfiguration"""
type RemoveConfigurationPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveCustomerCollaborator"""
type RemoveCustomerCollaboratorPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveGroup"""
type RemoveGroupPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveLight"""
type RemoveLightPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveMaterial"""
type RemoveMaterialPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveMaterialReplacement"""
type RemoveMaterialReplacementPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveMeshAssignment"""
type RemoveMeshAssignmentPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveMesh"""
type RemoveMeshPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveMeshReplacement"""
type RemoveMeshReplacementPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveModelTexture"""
type RemoveModelTexturePayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemovePreview"""
type RemovePreviewPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveProductCategory"""
type RemoveProductCategoryPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveProductFeature"""
type RemoveProductFeaturePayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveProductLink"""
type RemoveProductLinkPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveProduct"""
type RemoveProductPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveProductTag"""
type RemoveProductTagPayload {
  errors: [UserError!]
}

"""Autogenerated return type of RemoveSkin"""
type RemoveSkinPayload {
  errors: [UserError!]
}

input RemoveUnusedMaterialsAndTexturesInput {
  modelId: ID!
}

"""Autogenerated return type of RemoveUnusedMaterialsAndTextures"""
type RemoveUnusedMaterialsAndTexturesPayload {
  errors: [UserError!]
  node: Model
}

"""Autogenerated return type of RemoveVariant"""
type RemoveVariantPayload {
  errors: [UserError!]
}

enum RenderSceneDenoiserEnum {
  INTEL
  NVIDIA
  NONE
}

input RenderSceneInput {
  variantIds: [ID!]!
  resolution: CoordinatesTwoDimensionsInput!
  cameraAngle: CoordinatesInput!
  environmentDomeGround: Boolean!
  backgroundImageUrl: String
  backgroundColour: ColourInput
  progressiveRenderingMaxSamples: Int!
  denoiser: RenderSceneDenoiserEnum!
  watermarked: Boolean
}

"""Autogenerated return type of RenderScene"""
type RenderScenePayload {
  errors: [UserError!]
  jid: ID
}

input ReplaceMeshInput {
  sourceId: ID!
  replacementId: ID!
}

"""Autogenerated return type of ReplaceMesh"""
type ReplaceMeshPayload {
  replacements: Int!
}

input ReplaceTextureInput {
  sourceId: ID!
  replacementId: ID!
}

"""Autogenerated return type of ReplaceTexture"""
type ReplaceTexturePayload {
  replacements: Int!
}

type S3PresignedUrl implements Node {
  createdAt: Date!
  formData: JSON!
  host: String!
  id: ID!
  updatedAt: Date!
  url: Url!
  uuid: ID!
}

"""The connection type for S3PresignedUrl."""
type S3PresignedUrlConnection {
  count: Int!

  """A list of edges."""
  edges: [S3PresignedUrlEdge]

  """A list of nodes."""
  nodes: [S3PresignedUrl]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type S3PresignedUrlEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: S3PresignedUrl
}

input SendEmailInput {
  from: String
  to: String!
  subject: String!
  body: String!
}

"""Autogenerated return type of SendEmail"""
type SendEmailPayload {
  errors: [UserError!]
}

input SendResetPasswordLinkInput {
  email: String!
}

"""Autogenerated return type of SendResetPasswordLink"""
type SendResetPasswordLinkPayload {
  errors: [UserError!]
}

enum ShaderEnum {
  PBR
  SHADELESS
}

type SharedAsset implements Node {
  contentType: String
  createdAt: Date!
  fileMeta: JSON
  fileName: String
  fingerprint: String
  id: ID!
  jsonContent: JSON
  quality: Float!
  styles: [SharedAssetStyles!]
  updatedAt: Date!
  uuid: ID!
}

enum SharedAssetKindEnum {
  DEPRECATED_SOURCE_FILE
  IMAGE
  TEXTURE
  SHADOW
  INVERTED_SHADOW
  VIEWER_LOGO
  RENDERING
  ENVIRONMENT_MAP
  GLTF
  BIN
  GLB
  USDZ
  USER_MODEL
  BINARY
  FONT
  ATTACHMENT
  VTO
}

type SharedAssetStyles {
  height: Int
  name: FileStyleEnum!
  originalHeight: Int
  originalWidth: Int
  url: Url!
  width: Int
}

type ShopifyShop implements Node {
  createdAt: Date!
  customer: Customer!
  email: String!
  id: ID!
  shopifyDomain: String!
  updatedAt: Date!
  uuid: ID!
}

type Skin implements Node {
  app: App!
  attribute: String!
  createdAt: Date!
  id: ID!
  skinable: SkinableInterface!
  updatedAt: Date!
  uuid: ID!
  value: String!
}

scalar SkinableAttribute

interface SkinableInterface {
  skinableAttributes: [SkinableAttribute!]!
  skins(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    appId: ID
  ): SkinConnection!
}

"""The connection type for Skin."""
type SkinConnection {
  count: Int!

  """A list of edges."""
  edges: [SkinEdge]

  """A list of nodes."""
  nodes: [Skin]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type SkinEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Skin
}

type Subscription implements Node {
  cancelAtPeriodEnd: Boolean
  createdAt: Date!
  currentPeriodEnd: Date
  currentPeriodStart: Date
  customer: Customer!
  customerQuotas(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CustomerQuotaConnection
  id: ID!
  plan: Plan!
  planQuotas(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PlanQuotaConnection
  replenishedAt: Date!
  startDate: Date!
  status: SubscriptionStatusEnum!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for Subscription."""
type SubscriptionConnection {
  count: Int!

  """A list of edges."""
  edges: [SubscriptionEdge]

  """A list of nodes."""
  nodes: [Subscription]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type SubscriptionEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Subscription
}

enum SubscriptionStatusEnum {
  INCOMPLETE
  INCOMPLETE_EXPIRED
  TRIALING
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
  CANCELLING
}

type Tag implements SkinableInterface & Node {
  createdAt: Date!
  id: ID!
  name: String!
  products(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ProductConnection
  skinableAttributes: [SkinableAttribute!]!
  skins(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    appId: ID
  ): SkinConnection!
  status: TagStatusEnum!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for Tag."""
type TagConnection {
  count: Int!

  """A list of edges."""
  edges: [TagEdge]

  """A list of nodes."""
  nodes: [Tag]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type TagEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Tag
}

enum TagStatusEnum {
  LIVE
  INVISIBLE
  OFFLINE
}

enum TaxIdTypeEnum {
  AT_VAT
  AU_ABN
  CA_BN
  CA_QST
  ES_CIF
  BE_VAT
  BG_VAT
  CY_VAT
  CZ_VAT
  DE_VAT
  DK_VAT
  EE_VAT
  ES_VAT
  FI_VAT
  FR_VAT
  UK_VAT
  GR_VAT
  HR_VAT
  HU_VAT
  IE_VAT
  IT_VAT
  LT_VAT
  LU_VAT
  LV_VAT
  MT_VAT
  NL_VAT
  PL_VAT
  PT_VAT
  RO_VAT
  SE_VAT
  SI_VAT
  SK_VAT
  HK_BR
  IN_GST
  JP_CN
  KR_BRN
  LI_UID
  MX_RFC
  MY_ITN
  MY_SST
  NO_VAT
  NZ_GST
  RU_INN
  SG_UEN
  TH_VAT
  TW_VAT
  US_EIN
  ZA_VAT
  CH_VAT
}

enum TestingEnum {
  A
  B
  C
  DEPRECATED_B
}

type Texture implements Node {
  asset: SharedAsset!
  createdAt: Date!
  id: ID!
  jpgSize: Int!
  model: Model
  name: String!
  pngSize: Int!
  quality: Int!
  updatedAt: Date!
  uuid: ID!
}

"""The connection type for Texture."""
type TextureConnection {
  count: Int!

  """A list of edges."""
  edges: [TextureEdge]

  """A list of nodes."""
  nodes: [Texture]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type TextureEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Texture
}

enum UnitEnum {
  M
  CM
  MM
  IN
}

"""Autogenerated return type of UnpublishProduct"""
type UnpublishProductPayload {
  errors: [UserError!]
  node: Product
}

input UpdateAccessFilterInput {
  domain: Url!
  policy: AccessFilterPolicyEnum!
}

"""Autogenerated return type of UpdateAccessFilter"""
type UpdateAccessFilterPayload {
  errors: [UserError!]
  node: AccessFilter
}

input UpdateAnnotationInput {
  displayPosition: Int
  title: String
  content: String
  buttonText: String
  buttonUrl: Url
  markerPosition: CoordinatesInput
  cameraPosition: CoordinatesInput
  cameraLookAt: CoordinatesInput
  customCss: String
  customFontAssetId: ID
}

"""Autogenerated return type of UpdateAnnotation"""
type UpdateAnnotationPayload {
  errors: [UserError!]
  node: Annotation
}

input UpdateBrandInput {
  name: String
  website: String
  main: Boolean
  logoAssetId: ID
  customCss: String
  customFontAssetId: ID
}

"""Autogenerated return type of UpdateBrand"""
type UpdateBrandPayload {
  errors: [UserError!]
  node: Brand
}

input UpdateCameraInput {
  displayPosition: Int
  name: String
  dampingFactor: Float
  fieldOfView: Int
  horizontalAngle: Int
  horizontalRange: RangeInput
  rotationSpeed: Float
  autoRotationSpeed: Float
  verticalAngle: Int
  verticalRange: RangeInput
  zoomFactor: Float
  zoomRange: RangeInput
  zoomSpeed: Float
}

"""Autogenerated return type of UpdateCamera"""
type UpdateCameraPayload {
  errors: [UserError!]
  node: Camera
}

input UpdateConfigurationInput {
  name: String
  label: String
  optional: Boolean
  displayPosition: Int
  parentId: ID
  metadata: Hash
}

"""Autogenerated return type of UpdateConfiguration"""
type UpdateConfigurationPayload {
  errors: [UserError!]
  node: Configuration
}

input UpdateCustomerCollaboratorInput {
  role: CustomerCollaboratorRoleEnum
}

"""Autogenerated return type of UpdateCustomerCollaborator"""
type UpdateCustomerCollaboratorPayload {
  errors: [UserError!]
  node: CustomerCollaborator
}

input UpdateCustomerInput {
  name: String
  billingEmail: String
  phone: String
  addressLine1: String
  addressLine2: String
  city: String
  country: String
  postalCode: String
  taxId: String
  taxIdType: TaxIdTypeEnum
  business: Boolean
}

"""Autogenerated return type of UpdateCustomer"""
type UpdateCustomerPayload {
  errors: [UserError!]
  node: Customer
}

input UpdateGroupInput {
  name: String
  parentId: ID
  translation: CoordinatesInput
  rotation: CoordinatesQuaternionInput
  scale: CoordinatesInput
}

"""Autogenerated return type of UpdateGroup"""
type UpdateGroupPayload {
  errors: [UserError!]
  node: Group
}

input UpdateLightInput {
  name: String
  switchable: Boolean
  kind: LightKindEnum
  intensity: Float
  angle: Float
  penumbra: Float
  displayPosition: Int
  colour: ColourInput
  position: CoordinatesInput
  target: CoordinatesInput
  dimensions: DimensionsInput
  distance: Float
}

"""Autogenerated return type of UpdateLight"""
type UpdateLightPayload {
  errors: [UserError!]
  node: Light
}

input UpdateMaterialInput {
  groupId: ID
  name: String
  displayPosition: Int
  albedoColour: ColourInput
  tiling: CoordinatesTwoDimensionsInput
  tilingOffset: CoordinatesTwoDimensionsInput

  """
  The of tiling rotation of material. Rotates the UVs by this many radians counter-clockwise around the origin
  """
  tilingRotation: Float
  emissiveColour: ColourInput
  albedoTransparency: Boolean
  metalness: Float
  roughness: Float
  occlusionTextureIntensity: Float
  emissiveTextureIntensity: Float
  normalTextureIntensity: Float
  shader: ShaderEnum
  albedoTextureId: ID
  emissiveTextureId: ID
  metalnessTextureId: ID
  normalTextureId: ID
  occlusionTextureId: ID
  roughnessTextureId: ID
  ormTextureId: ID
  tiledAlbedoTextureId: ID
  tiledEmissiveTextureId: ID
  tiledNormalTextureId: ID
  tiledOrmTextureId: ID
}

"""Autogenerated return type of UpdateMaterial"""
type UpdateMaterialPayload {
  errors: [UserError!]
  node: Material
}

input UpdateMaterialReplacementInput {
  sourceId: ID
  replacementId: ID
}

"""Autogenerated return type of UpdateMaterialReplacement"""
type UpdateMaterialReplacementPayload {
  errors: [UserError!]
  node: MaterialReplacement
}

input UpdateMeshAssignmentInput {
  meshId: ID
  materialId: ID
  groupId: ID
  name: String
  translation: CoordinatesInput
  rotation: CoordinatesQuaternionInput
  scale: CoordinatesInput
}

"""Autogenerated return type of UpdateMeshAssignment"""
type UpdateMeshAssignmentPayload {
  errors: [UserError!]
  node: MeshAssignment
}

input UpdateMeshInput {
  groupId: ID
  sourceAssetId: ID
  name: String
  displayPosition: Int
  ignoredInitially: Boolean
}

"""Autogenerated return type of UpdateMesh"""
type UpdateMeshPayload {
  errors: [UserError!]
  node: Mesh
}

input UpdateMeshReplacementInput {
  sourceId: ID
  replacementId: ID
}

"""Autogenerated return type of UpdateMeshReplacement"""
type UpdateMeshReplacementPayload {
  errors: [UserError!]
  node: MeshReplacement
}

input UpdateModelInput {
  environmentMapAssetId: ID
  environmentMapIntensity: Float
  positioning: ModelPositioningEnum
}

"""Autogenerated return type of UpdateModel"""
type UpdateModelPayload {
  errors: [UserError!]
  node: Model
}

input UpdatePreviewInput {
  assetId: ID
  title: String
  displayPosition: Int
}

"""Autogenerated return type of UpdatePreview"""
type UpdatePreviewPayload {
  errors: [UserError!]
  node: Preview
}

input UpdateProductFeatureInput {
  name: String
  unit: ProductFeatureUnitEnum
  value: String
}

"""Autogenerated return type of UpdateProductFeature"""
type UpdateProductFeaturePayload {
  errors: [UserError!]
  node: ProductFeature
}

input UpdateProductInput {
  groupId: ID
  designerId: ID
  brandId: ID
  name: String
  subtitle: String
  description: String
  staffPick: Boolean
  hidden: Boolean
  shopifyIdentifier: String
}

input UpdateProductLinkInput {
  title: String
  url: Url
}

"""Autogenerated return type of UpdateProductLink"""
type UpdateProductLinkPayload {
  errors: [UserError!]
  node: ProductLink
}

"""Autogenerated return type of UpdateProduct"""
type UpdateProductPayload {
  errors: [UserError!]
  node: Product
}

input UpdateSharedAssetInput {
  quality: Float
}

"""Autogenerated return type of UpdateSharedAsset"""
type UpdateSharedAssetPayload {
  errors: [UserError!]
  node: SharedAsset
}

input UpdateSkinInput {
  value: String
}

"""Autogenerated return type of UpdateSkin"""
type UpdateSkinPayload {
  errors: [UserError!]
  node: Skin
}

input UpdateTextureInput {
  quality: Int
  name: String
}

"""Autogenerated return type of UpdateTexture"""
type UpdateTexturePayload {
  errors: [UserError!]
  node: Texture
}

input UpdateUserInput {
  firstname: String
  lastname: String
  email: String
  password: String
  survey: String
}

"""Autogenerated return type of UpdateUser"""
type UpdateUserPayload {
  errors: [UserError!]
  node: User
}

input UpdateVariantInput {
  displayPosition: Int
  name: String
  swatchColour: ColourInput
  vtoAssetId: ID
  shadowAssetId: ID
  shadowMeshId: ID
  shopifyIdentifier: String
  chainAnnotations: Boolean
  metadata: Hash
}

"""Autogenerated return type of UpdateVariant"""
type UpdateVariantPayload {
  errors: [UserError!]
  node: Variant
}

scalar Url

type User implements Node {
  createdAt: Date!
  customer: Customer
  customers(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): CustomerConnection!
  email: String!
  firstname: String!
  id: ID!
  lastname: String!
  name: String!
  token: String!
  updatedAt: Date!
  uuid: ID!
}

type UserError {
  code: String
  message: String!
  path: [String!]
}

type Variant implements SkinableInterface & Node {
  allMeshAssignmentGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): GroupConnection!
  allMeshAssignments(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MeshAssignmentConnection
  annotations(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): AnnotationConnection
  chainAnnotations: Boolean!
  configuration: Configuration
  createdAt: Date!
  displayPosition: Int!
  downloadSize: Int!
  id: ID!
  materialReplacements(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MaterialReplacementConnection
  meshAssignmentGroups(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    parentId: ID
  ): GroupConnection!
  meshAssignments(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    groupId: ID
  ): MeshAssignmentConnection
  meshReplacements(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): MeshReplacementConnection
  metadata: JSON
  name: String!
  originalVersion: Variant
  previews(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PreviewConnection
  shadowAsset: SharedAsset
  shadowMesh: Mesh
  shopifyIdentifier: String
  skinableAttributes: [SkinableAttribute!]!
  skins(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    appId: ID
  ): SkinConnection!
  status: VariantStatusEnum!
  swatchColour: JSON!
  toVariantJson: JSON!
  updatedAt: Date!
  uuid: ID!
  vtoAsset: SharedAsset
}

"""The connection type for Variant."""
type VariantConnection {
  count: Int!

  """A list of edges."""
  edges: [VariantEdge]

  """A list of nodes."""
  nodes: [Variant]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""An edge in a connection."""
type VariantEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Variant
}

enum VariantStatusEnum {
  LIVE
  INVISIBLE
  OFFLINE
}

type Viewer implements Node {
  accessTokens(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): AccessTokenConnection
  createdAt: Date!
  customer: Customer
  email: String!
  firstname: String!
  id: ID!
  lastname: String!
  name: String!
  token: String!
  updatedAt: Date!
  uuid: ID!
}

type ViewerSettings {
  logoUrl: String
  name: String!
  website: String
}

